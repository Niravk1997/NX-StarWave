<mah:MetroWindow 
    x:Class="Create_Custom_Math_Expression_Node.Create_Custom_Math_Expression_Window"  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker"
    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:local="clr-namespace:Create_Custom_Math_Expression_Node"  
    mc:Ignorable="d"  
    Title="Create Custom Math Expression Window" 
    TitleCharacterCasing="Normal"
    Height="600"
    Width="850">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="600"/>
            <ColumnDefinition Width="3"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Menu Grid.Row="0" Grid.Column="0">
            <Menu.Resources>
                <Style TargetType="MenuItem" BasedOn="{StaticResource MahApps.Styles.MenuItem}">
                    <Setter Property="IsCheckable" Value="False"/>
                    <Setter Property="IsChecked" Value="False"/>
                    <Setter Property="Margin" Value="0,0,0,0"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>
                <Style x:Key="MenuItem_Header_TextBlock" TargetType="TextBlock" BasedOn="{StaticResource MahApps.Styles.TextBlock}">
                    <Setter Property="Margin" Value="0,0,0,0"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="14"/>
                </Style>
            </Menu.Resources>
            <MenuItem IsCheckable="False" IsChecked="False">
                <MenuItem.Header>
                    <TextBlock Text="File" Style="{StaticResource MenuItem_Header_TextBlock}"/>
                </MenuItem.Header>
                <MenuItem.ToolTip>
                    <ToolTip>Load/Save Node math expressions to/from the table.</ToolTip>
                </MenuItem.ToolTip>
                <MenuItem IsCheckable="False" IsChecked="False">
                    <MenuItem.Header>
                        <TextBlock Text="Expressions" Style="{StaticResource MenuItem_Header_TextBlock}"/>
                    </MenuItem.Header>
                    <MenuItem Header="Load" IsCheckable="False" IsChecked="False" Click="Load_Expressions_from_File_to_Table_Click"/>
                    <MenuItem Header="Save" IsCheckable="False" IsChecked="False" Click="Save_Expressions_from_Table_to_Text_File_Click"/>
                    <MenuItem Header="Save (Append)" IsCheckable="False" IsChecked="False" Click="Save_Expressions_Append_from_Table_to_Text_File_Click"/>
                </MenuItem>
                <MenuItem x:Name="Exit" Header="Exit" Click="Exit_Click"/>
            </MenuItem>
            <MenuItem IsCheckable="False" IsChecked="False">
                <MenuItem.Header>
                    <TextBlock Text="Table" Style="{StaticResource MenuItem_Header_TextBlock}"/>
                </MenuItem.Header>
                <MenuItem.ToolTip>
                    <ToolTip>Load/Save expressions to/from the table.</ToolTip>
                </MenuItem.ToolTip>
                <MenuItem Header="Quick Save" IsCheckable="False" IsChecked="False" Click="Quick_Save_AutoLoad_File_Click"/>
                <MenuItem Header="Quick Load" IsCheckable="False" IsChecked="False" Click="Quick_Load_AutoLoad_File_Click"/>
                <MenuItem Header="Clear Table" IsCheckable="False" Click="Clear_Table_Click"/>
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="25"/>
                <RowDefinition Height="290"/>
                <RowDefinition Height="75"/>
            </Grid.RowDefinitions>
            <Grid.Resources>
                <Style TargetType="GroupBox">
                    <Setter Property="Margin" Value="2,0,2,0"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>
                <Style x:Key="Expression_ScrollViewer_Style" TargetType="ScrollViewer" BasedOn="{StaticResource MahApps.Styles.ScrollViewer}">
                    <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
                    <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                    <Setter Property="Margin" Value="2,2,2,0"/>
                    <Setter Property="Padding" Value="0,0,0,0"/>
                </Style>
                <Style x:Key="Expression_TextBox_Style" TargetType="TextBox" BasedOn="{StaticResource MahApps.Styles.TextBox}">
                    <Setter Property="TextWrapping" Value="Wrap"/>
                    <Setter Property="Padding" Value="0,0,0,0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="mah:TextBoxHelper.AutoWatermark" Value="True"/>
                    <Setter Property="mah:TextBoxHelper.Watermark" Value="Enter your Custom Node Math Expression here..."/>
                </Style>
                <Style x:Key="Expression_Border_Style" TargetType="Border">
                    <Setter Property="Margin" Value="2,0,2,2"/>
                    <Setter Property="Padding" Value="0,0,0,0"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="BorderBrush" Value="#FFE0E0E0"/>
                    <Setter Property="CornerRadius" Value="3,3,3,3"/>
                </Style>
                <Style x:Key="Expression_Name_TextBox_Style" TargetType="TextBox" BasedOn="{StaticResource MahApps.Styles.TextBox}">
                    <Setter Property="TextWrapping" Value="NoWrap"/>
                    <Setter Property="Padding" Value="0,0,0,0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="mah:TextBoxHelper.AutoWatermark" Value="True"/>
                    <Setter Property="mah:TextBoxHelper.Watermark" Value="Node's Name (Optional, keep it short)..."/>
                </Style>
            </Grid.Resources>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style TargetType="Label">
                        <Setter Property="Padding" Value="0,0,0,0"/>
                        <Setter Property="Margin" Value="5,0,0,0"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="mah:ToggleSwitch">
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="ContentPadding" Value="0"/>
                        <Setter Property="Margin" Value="0,0,0,0"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="MinWidth" Value="0"/>
                        <Setter Property="MinHeight" Value="0"/>
                        <Style.Resources>
                            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.KnobFillOff" Color="White"/>
                            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.KnobFillOffPointerOver" Color="White"/>
                            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.StrokeOff" Color="DodgerBlue"/>
                            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.StrokeOffPointerOver" Color="DodgerBlue"/>
                            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.FillOff" Color="DodgerBlue"/>
                            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.FillOffPointerOver" Color="DodgerBlue"/>
                            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.FillOn" Color="#00CE30"/>
                            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.FillOnPointerOver" Color="#00CE30"/>
                            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.StrokeOn" Color="#00CE30"/>
                            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.StrokeOnPointerOver" Color="#00CE30"/>
                            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.KnobFillOn" Color="White"/>
                            <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.KnobFillOnPointerOver" Color="White"/>
                        </Style.Resources>
                    </Style>
                </Grid.Resources>
                <Label Grid.Column="0" Content="Math Expression Parsing Library: "/>
                <mah:ToggleSwitch Grid.Column="1" OnContent="MathNET Symbolics (Less Features, Fast)" OffContent="mXparser (More Features, Slow)" IsOn="{Binding Fast_Expression_Parsing_Library, FallbackValue=false}"/>
            </Grid>
            <Border Grid.Row="1" Style="{StaticResource Expression_Border_Style}">
                <ScrollViewer Style="{StaticResource Expression_ScrollViewer_Style}">
                    <TextBox  Text="{Binding Expression}" Style="{StaticResource Expression_TextBox_Style}" IsEnabled="{Binding Enable_Write_to_Textfields, FallbackValue=true}"/>
                </ScrollViewer>
            </Border>
            <Border Grid.Row="2" Style="{StaticResource Expression_Border_Style}">
                <TextBox Text="{Binding Expression_Name}" Style="{StaticResource Expression_Name_TextBox_Style}"/>
            </Border>
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="230"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" IsEnabled="{Binding Enable_Write_to_Textfields, FallbackValue=true}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="82"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="Label">
                            <Setter Property="Padding" Value="0,0,0,0"/>
                            <Setter Property="Margin" Value="0,0,0,0"/>
                            <Setter Property="FontSize" Value="14"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Right"/>
                        </Style>
                        <Style TargetType="ComboBox" BasedOn="{StaticResource MahApps.Styles.ComboBox}">
                            <Setter Property="Padding" Value="0,0,0,0"/>
                            <Setter Property="Margin" Value="0,2,0,2"/>
                            <Setter Property="FontSize" Value="14"/>
                            <Setter Property="MinHeight" Value="0"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        </Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource MahApps.Styles.TextBox}">
                            <Setter Property="Padding" Value="0,0,0,0"/>
                            <Setter Property="Margin" Value="0,2,0,2"/>
                            <Setter Property="FontSize" Value="14"/>
                            <Setter Property="MinHeight" Value="0"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        </Style>
                    </Grid.Resources>
                    <Label Grid.Row="0" Grid.Column="0" Content="Category: "/>
                    <Label Grid.Row="1" Grid.Column="0" Content="Units: "/>
                    <Label Grid.Row="2" Grid.Column="0" Content="Total Inputs: "/>
                    <Label Grid.Row="3" Grid.Column="0" Content="Input 1: "/>
                    <Label Grid.Row="4" Grid.Column="0" Content="Input 2: "/>
                    <Label Grid.Row="5" Grid.Column="0" Content="Input 3: "/>
                    <Label Grid.Row="6" Grid.Column="0" Content="Input 4: "/>
                    <Label Grid.Row="7" Grid.Column="0" Content="Input 5: "/>
                    <Label Grid.Row="8" Grid.Column="0" Content="Input 6: "/>
                    <Label Grid.Row="9" Grid.Column="0" Content="Input 7: "/>
                    <Label Grid.Row="10" Grid.Column="0" Content="Output: "/>

                    <ComboBox Grid.Row="0" Grid.Column="1" SelectedIndex="{Binding Category_Select_Index}" ItemsSource="{Binding Node_Category}"/>

                    <ComboBox Grid.Row="2" Grid.Column="1" SelectedIndex="{Binding Total_Input_Select_Index}">
                        <ComboBoxItem Content="1"/>
                        <ComboBoxItem Content="2"/>
                        <ComboBoxItem Content="3"/>
                        <ComboBoxItem Content="4"/>
                        <ComboBoxItem Content="5"/>
                        <ComboBoxItem Content="6"/>
                        <ComboBoxItem Content="7"/>
                    </ComboBox>

                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Units_Text, FallbackValue=V}"/>
                    <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding Input_Text_1, FallbackValue=x1}" IsEnabled="{Binding Input_Text_1_IsEnabled, FallbackValue=true}"/>
                    <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding Input_Text_2, FallbackValue=x2}" IsEnabled="{Binding Input_Text_2_IsEnabled, FallbackValue=true}"/>
                    <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding Input_Text_3, FallbackValue=x3}" IsEnabled="{Binding Input_Text_3_IsEnabled, FallbackValue=true}"/>
                    <TextBox Grid.Row="6" Grid.Column="1" Text="{Binding Input_Text_4, FallbackValue=x4}" IsEnabled="{Binding Input_Text_4_IsEnabled, FallbackValue=true}"/>
                    <TextBox Grid.Row="7" Grid.Column="1" Text="{Binding Input_Text_5, FallbackValue=x5}" IsEnabled="{Binding Input_Text_5_IsEnabled, FallbackValue=true}"/>
                    <TextBox Grid.Row="8" Grid.Column="1" Text="{Binding Input_Text_6, FallbackValue=x6}" IsEnabled="{Binding Input_Text_6_IsEnabled, FallbackValue=true}"/>
                    <TextBox Grid.Row="9" Grid.Column="1" Text="{Binding Input_Text_7, FallbackValue=x7}" IsEnabled="{Binding Input_Text_7_IsEnabled, FallbackValue=true}"/>
                    <TextBox Grid.Row="10" Grid.Column="1" Text="{Binding Output_Text, FallbackValue=Output}"/>
                </Grid>
                <GroupBox Grid.Row="0" Grid.Column="1" Margin="3,3,3,3">
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <Button Content="Clear" Padding="4,0,4,0" BorderThickness="0" Style="{StaticResource MahApps.Styles.Button.Flat}" Click="ClearOutputLog_Click"/>
                            <TextBlock FontWeight="DemiBold" Margin="5,0,0,0">Output Log</TextBlock>
                        </StackPanel>
                    </GroupBox.Header>
                    <ScrollViewer x:Name="Output_Log_Scroll" HorizontalScrollBarVisibility="Auto">
                        <ScrollViewer.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Save" Click="Save_Log_Click"/>
                                <MenuItem Header="Clear" Click="Clear_Log_Click"/>
                            </ContextMenu>
                        </ScrollViewer.ContextMenu>
                        <ItemsControl  ItemsSource="{Binding Output_Log}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </GroupBox>
            </Grid>
            <Grid Grid.Row="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="130"/>
                    <ColumnDefinition Width="140"/>
                    <ColumnDefinition Width="330"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <Style TargetType="TabControl" BasedOn="{StaticResource MahApps.Styles.TabControl}">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="0,0,0,0"/>
                        </Style>
                        <Style TargetType="TabItem" BasedOn="{StaticResource MahApps.Styles.TabItem}">
                            <Setter Property="mah:HeaderedControlHelper.HeaderFontSize" Value="14"/>
                            <Setter Property="Padding" Value="4,0,4,0"/>
                        </Style>
                        <Style TargetType="ComboBox" BasedOn="{StaticResource MahApps.Styles.ComboBox}">
                            <Setter Property="Padding" Value="0,0,0,0"/>
                            <Setter Property="Margin" Value="0,0,0,0"/>
                        </Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource MahApps.Styles.TextBox}">
                            <Setter Property="Padding" Value="0,0,0,0"/>
                            <Setter Property="Margin" Value="0,0,0,0"/>
                            <Setter Property="MinHeight" Value="0"/>
                        </Style>
                        <Style TargetType="colorpicker:PortableColorPicker">
                            <Setter Property="Width" Value="40"/>
                            <Setter Property="Height" Value="20"/>
                        </Style>
                        <Style TargetType="Label">
                            <Setter Property="Padding" Value="0,0,0,0"/>
                            <Setter Property="Margin" Value="5,0,0,0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </Grid.Resources>
                    <Label Grid.Row="0" Content="Background: "/>
                    <Label Grid.Row="1" Content="Foreground: "/>

                    <colorpicker:PortableColorPicker Grid.Row="0" Grid.Column="1" SelectedColor="{Binding Node_Background_Color, Mode=TwoWay}"/>
                    <colorpicker:PortableColorPicker Grid.Row="1" Grid.Column="1" SelectedColor="{Binding Node_Foreground_Color, Mode=TwoWay}"/>
                </Grid>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style x:Key="ToggleSwitch_Style" TargetType="mah:ToggleSwitch">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="ContentPadding" Value="-8"/>
                            <Setter Property="Margin" Value="0,-3,0,0"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="MinWidth" Value="70"/>
                            <Style.Resources>
                                <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.FillOn" Color="#00CE30"/>
                                <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.FillOnPointerOver" Color="#00CE30"/>
                            </Style.Resources>
                        </Style>
                    </Grid.Resources>
                    <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Margin="4,0,0,0">
                        <Label Content="Auto Save"/>
                        <mah:ToggleSwitch Style="{StaticResource ToggleSwitch_Style}" OnContent="On" OffContent="Off" IsOn="{Binding Auto_Save}" ToolTip="Auto save expression to table after calculating."/>
                    </StackPanel>
                    <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal">
                        <Label Content="Auto Clear"/>
                        <mah:ToggleSwitch Style="{StaticResource ToggleSwitch_Style}" OnContent="On" OffContent="Off" IsOn="{Binding Auto_Clear}" ToolTip="Auto clear input fields after calculating."/>
                    </StackPanel>
                    <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal">
                        <Label Content="Auto Load"/>
                        <mah:ToggleSwitch Style="{StaticResource ToggleSwitch_Style}" OnContent="On" OffContent="Off" IsOn="{Binding Auto_Load}" ToolTip="Auto clear input fields after calculating."/>
                    </StackPanel>
                </Grid>
                <Grid Grid.Row="0" Grid.Column="2">
                    <Grid.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button.Dialogs.Accent}">
                            <Setter Property="Padding" Value="0,0,0,0"/>
                            <Setter Property="Margin" Value="0,0,0,0"/>
                            <Setter Property="FontSize" Value="14"/>
                            <Setter Property="MinHeight" Value="0"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="Height" Value="40"/>
                            <Setter Property="Width" Value="60"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="Clear" Background="Orange" Click="Clear_Input_TextFields_Click"/>
                    <Button Grid.Column="1" Content="Save" Background="LimeGreen" Click="Expression_Save_to_Table_Click"/>
                    <Button Grid.Column="2" Content="Update" Background="DodgerBlue" Click="Update_Selected_Expression_from_Table_Click"/>
                    <Button Grid.Column="3" Content="Verify" Background="DeepSkyBlue" Click="Expression_Verify_Click"/>
                    <Button Grid.Column="4" Content="Add" Background="DeepPink" Click="Add_Node_to_NodeNetwork_List_Click"/>
                </Grid>
            </Grid>
        </Grid>
        <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        <DataGrid x:Name="Expression_DataGrid" Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Margin="0,0,0,0"
                  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                  AutoGenerateColumns="False" IsReadOnly="False"
                  CanUserAddRows="False" CanUserDeleteRows="True" 
                  CanUserReorderColumns="True" CanUserResizeRows="True" 
                  CanUserSortColumns="True" CanUserResizeColumns="True"
                  EnableColumnVirtualization="True" EnableRowVirtualization="True"
                  ItemsSource="{Binding Expression_Data}"
                  SelectedItem="{Binding Selected_Expression_Data}"
                  SelectionChanged="Expression_DataGrid_SelectionChanged"
                  MouseDoubleClick="Expression_Load_Selected_Mouse_Double_Click">
            <DataGrid.Resources>
                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MahApps.Styles.DataGridColumnHeader}">
                    <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Expression_Name}" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="Margin" Value="5,0,0,0"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Expression" Binding="{Binding Expression}" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="Margin" Value="5,0,0,0"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Units" Binding="{Binding Units}" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="Margin" Value="5,0,0,0"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Total Inputs" Binding="{Binding Total_Inputs}" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="Margin" Value="5,0,0,0"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Fast" Binding="{Binding Using_Fast_Expression_Parsing_Library}" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="Margin" Value="5,0,0,0"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</mah:MetroWindow>
